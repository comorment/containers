# action to build and push the r Docker and Singularity image at each tag (for release)
name: container build push

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/r        
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}      
      -
        name: Build and push
        uses: docker/build-push-action@v6
        env:
          github_pat: ${{ secrets.COMORMENT_GITHUB_PAT }}
        with:
          context: "{{defaultContext}}:docker"
          push: ${{ github.event_name != 'pull_request' }}
          secrets: |
            "github_pat=${{ env.github_pat }}"
          tags: ${{ steps.meta.outputs.tags }}
          file:
            ./dockerfiles/r/Dockerfile
          platforms: linux/amd64

  build-apptainer-container:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    name: Build Apptainer Container
    steps:
      - name: Check out code for the container builds
        uses: actions/checkout@v4
      - name: Docker meta 
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/r            
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Apptainer container
        run: |
          tags="${{ steps.meta.outputs.tags }}"
          csv_tags=$(printf "%s\n" "$tags" | awk -F: 'NR==1{printf "%s,", $0; next} {printf "%s,", $NF}' | sed 's/,$//')
          IFS= read -r first_tag <<EOF
          $tags
          EOF
          push_tags="$(printf $csv_tags | sed -e "s#${{ github.repository_owner }}/r#${{ github.repository_owner }}/r_sif#g")"  # can't search and replace letter "r"
          echo ${{ secrets.GITHUB_TOKEN }} | oras login --username ${{ github.repository_owner }} --password-stdin ghcr.io
          docker pull kaczmarj/apptainer:latest
          docker run --rm --privileged -v $(pwd):/work kaczmarj/apptainer build r.sif docker://"$first_tag"
          oras push "$push_tags" --artifact-type application/vnd.acme.rocket.config r.sif
          rm r.sif
        shell: sh