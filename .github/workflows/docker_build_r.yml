# action to build the r Docker image at each commit without pushing it
name: build r Docker image

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    tags:
      - "v*.*.*"

env:
  LATEST_TAG: ghcr.io/comorment/r:latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: 'true'
          sparse-checkout: |
            test-requirements.txt
            tests
      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/r        
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}      
      -
        name: Build and push
        uses: docker/build-push-action@v6
        env:
          GITHUB_PAT: ${{ secrets.COMORMENT_GITHUB_PAT }}
        with:
          context: "{{defaultContext}}:docker"
          load: true
          secrets: |
            "GITHUB_PAT=${{ env.GITHUB_PAT }}"
          tags: ${{ env.LATEST_TAG }}
          file:
            ./dockerfiles/r/Dockerfile
      - 
        name: Test
        run: |
          git lfs pull -I tests/extras/*.tar.gz
          pip3 install -r test-requirements.txt
          py.test -v tests/test_r.py
      -
        name: Build and push
        uses: docker/build-push-action@v6
        env:
          GITHUB_PAT: ${{ secrets.COMORMENT_GITHUB_PAT }}
        with:
          context: "{{defaultContext}}:docker"
          push: False
          secrets: |
            "GITHUB_PAT=${{ env.GITHUB_PAT }}"
          tags: ${{ steps.meta.outputs.tags }}
          file:
            ./dockerfiles/r/Dockerfile
          platforms: linux/amd64
